# Proyecto de Vue.js y FastAPI

Este proyecto combina una aplicación frontend desarrollada en Vue.js y una API backend creada con FastAPI. Proporciona un esqueleto básico para comenzar a desarrollar una aplicación web utilizando estas tecnologías.

## Funcionalidades

- El frontend desarrollado en Vue.js proporciona una interfaz de usuario interactiva para la aplicación.
- El backend creado con FastAPI sirve una API RESTful para interactuar con la base de datos y realizar operaciones de backend.
- La base de datos MySQL se utiliza para almacenar y recuperar datos de la aplicación.
- Adminer se proporciona para la administración y visualización de la base de datos.

## Configuración y uso

### Requisitos previos

- Docker y Docker Compose deben estar instalados en tu sistema.

### Pasos de configuración

1. Clona este repositorio en tu máquina local:

git clone <URL_DEL_REPOSITORIO>

2. Navega al directorio del proyecto:

cd proyecto-vuejs-fastapi

3. Copia el archivo `.env.example` y renómbralo como `.env`:

4. Edita el archivo `.env` y actualiza los valores de las variables de entorno según tus preferencias y configuración.

5. Ejecuta el siguiente comando para iniciar los contenedores Docker:

docker-compose up

6. El frontend estará disponible en `http://localhost:80`, y el backend en `http://localhost:8000`. Puedes acceder a Adminer en `http://localhost:8080` para administrar la base de datos MySQL.

### Estructura del proyecto

El proyecto tiene la siguiente estructura de directorios:

- `frontend/`: Contiene la aplicación frontend desarrollada en Vue.js.
- `backend/`: Contiene la API backend creada con FastAPI.
- `database/`: Directorio utilizado por Docker Compose para almacenar los datos de la base de datos MySQL.

### Personalización y desarrollo

- Puedes personalizar el frontend editando los archivos en el directorio `frontend/`.
- Para realizar cambios en el backend, modifica los archivos en el directorio `backend/`.
- Los cambios en los archivos de configuración del proyecto pueden requerir reiniciar los contenedores Docker.

## Docker Compose

El proyecto utiliza Docker Compose para orquestar y gestionar los contenedores Docker necesarios para el frontend, backend y la base de datos. Docker Compose simplifica el proceso de configuración y ejecución de múltiples contenedores interconectados, lo que facilita el desarrollo y la implementación de la aplicación en diferentes entornos.

### Archivo Docker Compose

El archivo `docker-compose.yml` define los servicios, configuraciones y dependencias de los contenedores Docker utilizados en el proyecto. A continuación, se explica brevemente cada sección del archivo:

- **services**: Define los servicios que se ejecutarán como contenedores. En este proyecto, se definen los servicios `frontend`, `backend`, `database` y `adminer`.

- **build**: Especifica cómo se debe construir la imagen del contenedor para el servicio. Aquí se indica la ruta del contexto de construcción y el archivo `Dockerfile` correspondiente.

- **ports**: Mapea los
